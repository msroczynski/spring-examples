<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:jms="http://www.springframework.org/schema/integration/jms"
       xmlns:file="http://www.springframework.org/schema/integration/file"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/integration/jms
		http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
		http://www.springframework.org/schema/integration/file
		http://www.springframework.org/schema/integration/file/spring-integration-file.xsd">

    <context:annotation-config/>

    <context:component-scan base-package="com.ms.demo.sfdc"/>
    <!-- Properties placeholder -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>app.properties</value>
        </property>
    </bean>
    <!-- ActiveMQ connection factory -->
    <bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${amq.brokerURL}"/>
    </bean>
    <!-- A cached connection to wrap the ActiveMQ connection -->
    <bean id="cachedConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="amqConnectionFactory"/>
        <property name="sessionCacheSize" value="10"/>
    </bean>
    <!-- A destination in ActiveMQ -->
    <bean id="amqInQueueSFDC" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="${amq.sfdc.queueName}"/>
    </bean>
    <!-- A JmsTemplate instance that uses the cached connection and destination -->
    <bean id="producerTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="cachedConnectionFactory"/>
        <property name="defaultDestination" ref="amqInQueueSFDC"/>
    </bean>

    <!--<bean id="messageProducer" class="com.ms.demo.sfdc.MessageProducer"/>-->

    <!-- JMS message listener -->
    <bean id="jmsMessageListener" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachedConnectionFactory"/>
        <property name="destination" ref="amqInQueueSFDC"/>
        <property name="sessionTransacted" value="true"/>
        <property name="maxConcurrentConsumers" value="${jms.message.listener.maxConcurrentConsumers}"/>
        <property name="concurrentConsumers" value="${jms.message.listener.concurrentConsumers}"/>
        <property name="receiveTimeout" value="${jms.message.listener.receiveTimeout}"/>
        <property name="recoveryInterval" value="${jms.message.listener.recoveryInterval}"/>
        <property name="autoStartup" value="${jms.message.listener.autoStartup}"/>
    </bean>

    <!-- JMS message consumer channel -->
    <jms:message-driven-channel-adapter id="inJMS" container="jmsMessageListener" channel="in-channel"/>

    <file:outbound-channel-adapter id="outFile" auto-create-directory="true" delete-source-files="true" directory="file:C:\Temp\OUT" channel="out-channel"/>

    <int:publish-subscribe-channel id="in-channel" />
    <int:channel id="out-channel">
        <int:queue capacity="10" />
    </int:channel>
    <int:bridge input-channel="in-channel" output-channel="out-channel"/>

    <int:poller default="true" fixed-rate="100"></int:poller>

    <bean id="properties" class="com.ms.demo.sfdc.PropertiesProvider"/>

</beans>